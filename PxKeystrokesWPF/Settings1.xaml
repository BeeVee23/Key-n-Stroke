<Window x:Class="PxKeystrokesWPF.Settings1"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:uc="clr-namespace:PxKeystrokesWPF"
        xmlns:diag="clr-namespace:System.Diagnostics;assembly=WindowsBase"
        xmlns:fontcolorpicker="clr-namespace:WpfColorFontDialog;assembly=WpfColorFontDialog"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        mc:Ignorable="d"
        Title="Settings" Height="auto" Width="900"
        SizeToContent="Height" Closing="Window_Closing">
    <Window.Resources>
        <Style TargetType="RadioButton">
            <Setter Property="Margin" Value="5,5,0,0" />
        </Style>
        <Style TargetType="Button">
            <Setter Property="Margin" Value="0,5,0,5" />
            <Setter Property="Height" Value="23"/>
        </Style>
        <Style TargetType="CheckBox">
            <Setter Property="Margin" Value="5,10,0,0" />
        </Style>
        <Style TargetType="uc:LabeledSlider">
            <Setter Property="Margin" Value="0,5,0,0" />
        </Style>
        <uc:EnumBooleanConverter x:Key="EnumBooleanConverter" />
        <uc:FloatPercentageConverter x:Key="FloatPercentageConverter"/>
        <uc:MediaColorDrawingColorConverter x:Key="MediaColorDrawingColorConverter"/>
    </Window.Resources>
    <Grid Margin="5,0" x:Name="layout_root">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="50"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="100*"/>
            <ColumnDefinition Width="100*"/>
            <ColumnDefinition Width="100*"/>
            <ColumnDefinition Width="100*"/>
        </Grid.ColumnDefinitions>
        <StackPanel Margin="5">
            <GroupBox Header="Text Alignment">
                <StackPanel Margin="0,0,5,0" >
                    <RadioButton x:Name="rb_align_left" Content="left" GroupName="align"
                                 IsChecked="{Binding LabelTextAlignment, Converter={StaticResource EnumBooleanConverter}, ConverterParameter={x:Static uc:TextAlignment.Left}}" />
                    <RadioButton x:Name="rb_align_center" Content="center" GroupName="align" HorizontalAlignment="Center"
                                 IsChecked="{Binding LabelTextAlignment, Converter={StaticResource EnumBooleanConverter}, ConverterParameter={x:Static uc:TextAlignment.Center}}" />
                    <RadioButton x:Name="rb_align_right" Content="right" GroupName="align"  HorizontalAlignment="Right"
                                 IsChecked="{Binding LabelTextAlignment, Converter={StaticResource EnumBooleanConverter}, ConverterParameter={x:Static uc:TextAlignment.Right}}" />
                </StackPanel>
            </GroupBox>
            <GroupBox Header="Text Direction">
                <StackPanel>
                    <RadioButton x:Name="rb_td_up" Content="up" GroupName="td"
                                 IsChecked="{Binding LabelTextDirection, Converter={StaticResource EnumBooleanConverter}, ConverterParameter={x:Static uc:TextDirection.Up}}"/>
                    <RadioButton x:Name="rb_td_down" Content="down" GroupName="td"
                                 IsChecked="{Binding LabelTextDirection, Converter={StaticResource EnumBooleanConverter}, ConverterParameter={x:Static uc:TextDirection.Down}}"/>
                </StackPanel>
            </GroupBox>
            <GroupBox Header="Style">
                <StackPanel>
                    <RadioButton x:Name="rb_style_noani" Content="no animation" GroupName="style"
                                 IsChecked="{Binding LabelAnimation, Converter={StaticResource EnumBooleanConverter}, ConverterParameter={x:Static uc:Style.NoAnimation}}" />
                    <RadioButton x:Name="rb_style_slide" Content="slide" GroupName="style"
                                 IsChecked="{Binding LabelAnimation, Converter={StaticResource EnumBooleanConverter}, ConverterParameter={x:Static uc:Style.Slide}}" />
                </StackPanel>
            </GroupBox>
            <Grid Margin="10">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="10"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Button x:Name="bn_reset_position" Grid.Column="0" Grid.ColumnSpan="2" Margin="0,5,9.667,0" VerticalAlignment="Top" Click="Bn_reset_position_Click">Reset position</Button>
                <Button x:Name="bn_reset_all" Grid.Column="2">Reset all</Button>
            </Grid>
        </StackPanel>
        <StackPanel Grid.Column="1" Margin="5">
            <GroupBox Header="Text">
                <StackPanel Margin="0,0,0,5">
                    <Button x:Name="button_textfont" Click="OnButtonTextFontClick" Grid.ColumnSpan="3" Margin="10">Font</Button>
                    <xctk:ColorPicker x:Name="colorpicker_text_color" ColorMode="ColorCanvas" Margin="10" SelectedColor="{Binding LabelColor, Mode=TwoWay, Converter={StaticResource MediaColorDrawingColorConverter}}"/>
                    <uc:LabeledSlider x:Name="slider_vertdist" Title="Vertical Distance" Minimum="10" Maximum="100"
                                      Value="{Binding LineDistance, Mode=TwoWay}" />
                    <uc:LabeledSlider x:Name="slider_historycount" Title="History Count" Minimum="1" Maximum="50" Value="{Binding HistoryLength, Mode=TwoWay}" />
                    <WrapPanel Margin="0,10,0,0">
                        <CheckBox x:Name="cb_enableHistoryTimeout"  IsChecked="{Binding EnableHistoryTimeout}">
                            <TextBlock>
                                History Timeout
                                <TextBlock Margin="20,0,0,0" Text="{Binding ElementName=slider_history_timeout, Path=Value, Mode=OneWay}" />ms
                            </TextBlock>
                        </CheckBox>
                    </WrapPanel>
                    <uc:LabeledSlider x:Name="slider_history_timeout" 
                                      Margin="16,5,10,5"
                                      Title="Timeout"
                                      Maximum="120000"
                                      Minimum="1000"
                                      Value="{Binding HistoryTimeout, Mode=TwoWay}"
                                      />
                    <CheckBox x:Name="cb_hideWindow" IsChecked="{Binding EnableWindowFade}">Hide Window when empty</CheckBox>
                    <CheckBox x:Name="cb_backspace" IsChecked="{Binding BackspaceDeletesText}">Backspace can delete text</CheckBox>


                </StackPanel>
            </GroupBox>
        </StackPanel>
        <StackPanel Grid.Column="2" Margin="5">
            <GroupBox Header="Cursor">
                <StackPanel>
                    <CheckBox x:Name="cb_cursorindicator" IsChecked="{Binding EnableCursorIndicator}">Indicate cursor position</CheckBox>
                    <uc:LabeledSlider x:Name="slider_ci_opacity" Title="Opacity" Minimum="10" Maximum="100" 
                                      Value="{Binding CursorIndicatorOpacity, Converter={StaticResource FloatPercentageConverter}, Mode=TwoWay}" />
                    <uc:LabeledSlider x:Name="slider_ci_size" Title="Size" Minimum="3" Maximum="300" Value="{Binding CursorIndicatorSize, Mode=TwoWay}" />
                    <xctk:ColorPicker x:Name="colorpicker_ci_color" ColorMode="ColorCanvas" Margin="10" SelectedColor="{Binding CursorIndicatorColor, Mode=TwoWay, Converter={StaticResource MediaColorDrawingColorConverter}}"/>
                </StackPanel>
            </GroupBox>
            <GroupBox Header="Text Background">
                <StackPanel Margin="0,0,0,5">
                    <xctk:ColorPicker x:Name="colorpicker_background_color" ColorMode="ColorCanvas" Margin="10" SelectedColor="{Binding BackgroundColor, Mode=TwoWay, Converter={StaticResource MediaColorDrawingColorConverter}}"/>
                    <uc:LabeledSlider x:Name="slider_opacity" Title="Opacity" Minimum="800" Maximum="3000" Value="{Binding Opacity, Mode=TwoWay}" />
                </StackPanel>
            </GroupBox>
        </StackPanel>
        <StackPanel Grid.Column="3" Margin="5">
            <GroupBox Header="Mouse Clicks">
                <StackPanel Margin="0,0,0,5">
                    <RadioButton x:Name="rb_bi_disable" Content="Do not indicate clicks" GroupName="bi"
                                 IsChecked="{Binding ButtonIndicator, Converter={StaticResource EnumBooleanConverter}, ConverterParameter={x:Static uc:ButtonIndicatorType.Disabled}}"/>
                    <RadioButton x:Name="rb_bi_icon" Content="Show icon on click" GroupName="bi"
                                 IsChecked="{Binding ButtonIndicator, Converter={StaticResource EnumBooleanConverter}, ConverterParameter={x:Static uc:ButtonIndicatorType.PicsAroundCursor}}"/>
                    <uc:LabeledSlider x:Name="slider_bi_size" Title="Size" Minimum="800" Maximum="3000" Value="{Binding ButtonIndicatorSize, Mode=TwoWay}"/>
                    <uc:LabeledSlider x:Name="slider_bi_distance" Title="Distance" Minimum="800" Maximum="3000" Value="{Binding ButtonIndicatorPositionDistance, Mode=TwoWay}"/>
                    <uc:LabeledSlider x:Name="slider_bi_angle" Title="Direction" Minimum="800" Maximum="3000" Value="{Binding ButtonIndicatorPositionAngle, Mode=TwoWay}"/>
                    <CheckBox x:Name="cb_bi_history"  IsChecked="{Binding AddButtonEventsToHistory}">Add to history</CheckBox>
                </StackPanel>
            </GroupBox>
        </StackPanel>
        <StackPanel Grid.Row="1" Grid.ColumnSpan="2" Margin="5">
            <TextBlock>Press and hold Ctrl + Shift + Alt to reveal setting buttons</TextBlock>
            <TextBlock>
                <Hyperlink RequestNavigate="Hyperlink_RequestNavigate">
                    Issues? Want to have a look at the source code?
                </Hyperlink>
            </TextBlock>
        </StackPanel>
        <Button x:Name="button_exit" Grid.Column="2" Grid.Row="1" VerticalAlignment="Bottom" Margin="10,0,10,10">Exit Application</Button>
        <Button x:Name="button_close" Grid.Column="3" Grid.Row="1" VerticalAlignment="Bottom" Margin="10,0,10,10" Click="Button_close_Click">Close</Button>
    </Grid>
</Window>
