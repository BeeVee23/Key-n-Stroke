<Window x:Class="PxKeystrokesWPF.Settings1"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:uc="clr-namespace:PxKeystrokesWPF"
        xmlns:diag="clr-namespace:System.Diagnostics;assembly=WindowsBase"
        xmlns:fontcolorpicker="clr-namespace:WpfColorFontDialog;assembly=WpfColorFontDialog"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        mc:Ignorable="d"
        Title="Settings"
        Height="auto"
        Width="900"
        SizeToContent="Height"
        Closing="Window_Closing">
    <Window.Resources>
        <Style TargetType="RadioButton">
            <Setter Property="Margin"
                    Value="5,5,0,0" />
        </Style>
        <Style TargetType="Button">
            <Setter Property="Margin"
                    Value="0,5,0,5" />
            <Setter Property="Height"
                    Value="23" />
        </Style>
        <Style TargetType="CheckBox">
            <Setter Property="Margin"
                    Value="5,10,0,0" />
        </Style>
        <Style TargetType="uc:LabeledSlider">
            <Setter Property="Margin"
                    Value="0,5,0,0" />
        </Style>
        <uc:EnumBooleanConverter x:Key="EnumBooleanConverter" />
        <uc:FloatPercentageConverter x:Key="FloatPercentageConverter" />
        <uc:MediaColorDrawingColorConverter x:Key="MediaColorDrawingColorConverter" />
    </Window.Resources>
    <Grid Margin="5,0"
          x:Name="layout_root">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition Height="50" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="100*" />
            <ColumnDefinition Width="100*" />
            <ColumnDefinition Width="100*" />
            <ColumnDefinition Width="100*" />
        </Grid.ColumnDefinitions>
        <GroupBox Header="Keystroke History"
                  Grid.Column="0"
                  Grid.ColumnSpan="2"
                  Margin="5">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="100*" />
                    <ColumnDefinition Width="100*" />
                </Grid.ColumnDefinitions>
                <StackPanel Grid.Column="0"
                            Margin="5">
                    <CheckBox x:Name="cb_enableKeystrokeDisplay"
                              IsChecked="{Binding EnableKeystrokeHistory}">Show Keystroke History</CheckBox>

                    <StackPanel Margin="0,0,0,5">
                        <Button x:Name="button_textfont"
                                Click="OnButtonTextFontClick"
                                Grid.ColumnSpan="3"
                                Margin="10">Font</Button>
                        <StackPanel Orientation="Horizontal">
                            <Label VerticalAlignment="Center">Text Color</Label>
                            <xctk:ColorPicker x:Name="colorpicker_text_color"
                                              ColorMode="ColorCanvas"
                                              Margin="10,0,0,0"
                                              Width="80"
                                              SelectedColor="{Binding LabelColor, Mode=TwoWay, Converter={StaticResource MediaColorDrawingColorConverter}}" />
                        </StackPanel>
                        <StackPanel Orientation="Horizontal"
                                    Margin="0,3,0,0">
                            <Label VerticalAlignment="Center">Background Color</Label>
                            <xctk:ColorPicker x:Name="colorpicker_background_color"
                                              ColorMode="ColorCanvas"
                                              Margin="10,0,0,0"
                                              Width="80"
                                              SelectedColor="{Binding BackgroundColor, Mode=TwoWay, Converter={StaticResource MediaColorDrawingColorConverter}}" />
                        </StackPanel>
                        <TextBlock TextWrapping="Wrap"
                                   Margin="5,3,0,0">Set the window opacity via the "A" channel of the background color.</TextBlock>
                        <uc:LabeledSlider x:Name="slider_vertdist"
                                          Title="Line Distance"
                                          Minimum="10.0"
                                          Maximum="100.0"
                                          Value="{Binding LineDistance, Mode=TwoWay}" />
                        <StackPanel Orientation="Horizontal">
                            <Label>No of lines in history</Label>
                            <xctk:IntegerUpDown x:Name="slider_historycount"
                                                Minimum="1"
                                                Maximum="50"
                                                Increment="1"
                                                Value="{Binding HistoryLength, Mode=TwoWay}"
                                                Width="60" />
                        </StackPanel>
                        <WrapPanel Margin="0,0,0,0">
                            <CheckBox x:Name="cb_enableHistoryTimeout"
                                      IsChecked="{Binding EnableHistoryTimeout}">
                                <TextBlock>
                                Lines disappear after
                                <TextBlock Margin="3,0,0,0"
                                           Text="{Binding ElementName=slider_history_timeout, Path=Value, Mode=OneWay, StringFormat=N1}" />s
                            </TextBlock>
                            </CheckBox>
                        </WrapPanel>
                        <uc:LabeledSlider x:Name="slider_history_timeout"
                                          Margin="20,5,10,0"
                                          Title=""
                                          Maximum="120.0"
                                          Minimum="0.5"
                                          Logarithmic="True"
                                          HalfWay="0.08"
                                          Value="{Binding HistoryTimeout, Mode=TwoWay}" />
                        <CheckBox x:Name="cb_hideWindow"
                                  IsChecked="{Binding EnableWindowFade}">Hide window when empty</CheckBox>
                        <CheckBox x:Name="cb_backspace"
                                  IsChecked="{Binding BackspaceDeletesText}">Backspace can delete text</CheckBox>
                        <CheckBox x:Name="cb_periodictopmost"
                                  IsChecked="{Binding PeriodicTopmost}">Put on top periodically</CheckBox>

                    </StackPanel>

                </StackPanel>
                <StackPanel Margin="5"
                            Grid.Column="1">
                    <GroupBox Header="Alignment">
                        <StackPanel Margin="0,0,5,0">
                            <RadioButton x:Name="rb_align_left"
                                         Content="left"
                                         GroupName="align"
                                         IsChecked="{Binding LabelTextAlignment, Converter={StaticResource EnumBooleanConverter}, ConverterParameter={x:Static uc:TextAlignment.Left}}" />
                            <RadioButton x:Name="rb_align_center"
                                         Content="center"
                                         GroupName="align"
                                         HorizontalAlignment="Center"
                                         IsChecked="{Binding LabelTextAlignment, Converter={StaticResource EnumBooleanConverter}, ConverterParameter={x:Static uc:TextAlignment.Center}}" />
                            <RadioButton x:Name="rb_align_right"
                                         Content="right"
                                         GroupName="align"
                                         HorizontalAlignment="Right"
                                         IsChecked="{Binding LabelTextAlignment, Converter={StaticResource EnumBooleanConverter}, ConverterParameter={x:Static uc:TextAlignment.Right}}" />
                        </StackPanel>
                    </GroupBox>
                    <GroupBox Header="Move Direction">
                        <StackPanel>
                            <RadioButton x:Name="rb_td_up"
                                         Content="up"
                                         GroupName="td"
                                         IsChecked="{Binding LabelTextDirection, Converter={StaticResource EnumBooleanConverter}, ConverterParameter={x:Static uc:TextDirection.Up}}" />
                            <RadioButton x:Name="rb_td_down"
                                         Content="down"
                                         GroupName="td"
                                         IsChecked="{Binding LabelTextDirection, Converter={StaticResource EnumBooleanConverter}, ConverterParameter={x:Static uc:TextDirection.Down}}" />
                        </StackPanel>
                    </GroupBox>
                    <GroupBox Header="Animation">
                        <StackPanel>
                            <RadioButton x:Name="rb_style_noani"
                                         Content="no animation"
                                         GroupName="style"
                                         IsChecked="{Binding LabelAnimation, Converter={StaticResource EnumBooleanConverter}, ConverterParameter={x:Static uc:Style.NoAnimation}}" />
                            <RadioButton x:Name="rb_style_slide"
                                         Content="slide"
                                         GroupName="style"
                                         IsChecked="{Binding LabelAnimation, Converter={StaticResource EnumBooleanConverter}, ConverterParameter={x:Static uc:Style.Slide}}" />
                        </StackPanel>
                    </GroupBox>
                    <CheckBox x:Name="cb_enablesettingsmode"
                              IsChecked="{Binding EnableSettingsMode}">Enable resize/move mode</CheckBox>
                    <TextBlock TextWrapping="Wrap"
                               Margin="5,3,0,0">
                        Key combination to enable resizing and moving of the keystroke history window.</TextBlock>
                    <TextBox x:Name="TextBoxKeystrokeHistorySettingsModeShortcut"
                             Margin="5,3,0,0"
                             Text="{Binding KeystrokeHistorySettingsModeShortcut, Mode=TwoWay}"
                             TextChanged="TextBoxKeystrokeHistorySettingsModeShortcut_TextChanged" />
                    <TextBlock TextWrapping="Wrap"
                               Margin="10,0,0,0">
                         Default is <Hyperlink Click="Hyperlink_Click"><Run x:Name="SettingsModeShortcutDefault"></Run></Hyperlink>. <LineBreak /> 
                         Available keys: <Run x:Name="AvailableShortcutKeys"></Run>. Combine the keys with '+'.
                    </TextBlock>
                </StackPanel>

            </Grid>
        </GroupBox>
        <StackPanel Grid.Column="2"
                    Margin="5">
            <GroupBox Header="Cursor">
                <StackPanel>
                    <CheckBox x:Name="cb_cursorindicator"
                              IsChecked="{Binding EnableCursorIndicator}">Indicate cursor position</CheckBox>
                    <uc:LabeledSlider x:Name="slider_ci_opacity"
                                      Title="Opacity"
                                      Minimum="0.1"
                                      Maximum="1"
                                      Value="{Binding CursorIndicatorOpacity, Mode=TwoWay}" />
                    <uc:LabeledSlider x:Name="slider_ci_size"
                                      Title="Size"
                                      Minimum="3.0"
                                      Maximum="300.0"
                                      Value="{Binding CursorIndicatorSize, Mode=TwoWay}" />
                    <StackPanel Orientation="Horizontal">
                        <Label VerticalAlignment="Center">Color</Label>
                        <xctk:ColorPicker x:Name="colorpicker_ci_color"
                                          ColorMode="ColorCanvas"
                                          Margin="10,0,0,0"
                                          Width="80"
                                          SelectedColor="{Binding CursorIndicatorColor, Mode=TwoWay, Converter={StaticResource MediaColorDrawingColorConverter}}" />
                    </StackPanel>
                </StackPanel>
            </GroupBox>
        </StackPanel>
        <StackPanel Grid.Column="3"
                    Margin="5">
            <GroupBox Header="Mouse Clicks">
                <StackPanel Margin="0,0,0,5">
                    <RadioButton x:Name="rb_bi_disable"
                                 Content="Do not indicate clicks"
                                 GroupName="bi"
                                 IsChecked="{Binding ButtonIndicator, Converter={StaticResource EnumBooleanConverter}, ConverterParameter={x:Static uc:ButtonIndicatorType.Disabled}}" />
                    <RadioButton x:Name="rb_bi_icon"
                                 Content="Show icon on click"
                                 GroupName="bi"
                                 IsChecked="{Binding ButtonIndicator, Converter={StaticResource EnumBooleanConverter}, ConverterParameter={x:Static uc:ButtonIndicatorType.PicsAroundCursor}}" />
                    <uc:LabeledSlider x:Name="slider_bi_size"
                                      Title="Size"
                                      Minimum="0.1"
                                      Maximum="5"
                                      Value="{Binding ButtonIndicatorScaling, Mode=TwoWay}" />
                    <uc:LabeledSlider x:Name="slider_bi_distance"
                                      Title="Distance"
                                      Minimum="10"
                                      Maximum="100"
                                      Value="{Binding ButtonIndicatorPositionDistance, Mode=TwoWay}" />
                    <uc:LabeledSlider x:Name="slider_bi_angle"
                                      Title="Direction"
                                      Maximum="65"
                                      Value="{Binding ButtonIndicatorPositionAngle, Mode=TwoWay}" />
                    <CheckBox x:Name="cb_bi_history"
                              IsChecked="{Binding AddButtonEventsToHistory}">Add to history</CheckBox>
                </StackPanel>
            </GroupBox>
            <Grid Margin="10">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="10" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Button x:Name="bn_reset_position"
                        Grid.Column="0"
                        Grid.ColumnSpan="2"
                        Margin="0,5,9.667,0"
                        VerticalAlignment="Top"
                        Click="Bn_reset_position_Click">Reset position</Button>
                <Button x:Name="bn_reset_all"
                        Grid.Column="2"
                        Click="bn_reset_all_Click">Reset all</Button>
            </Grid>
        </StackPanel>
        <StackPanel Grid.Row="1"
                    Grid.ColumnSpan="2"
                    Margin="5">
            <TextBlock>Press and hold Ctrl + Shift + Alt to reveal setting buttons</TextBlock>
            <TextBlock>
                <Hyperlink RequestNavigate="Hyperlink_RequestNavigate">
                    Issues? Want to have a look at the source code?
                </Hyperlink>
            </TextBlock>
        </StackPanel>
        <Button x:Name="button_exit"
                Grid.Column="2"
                Grid.Row="1"
                VerticalAlignment="Bottom"
                Margin="10,0,10,10"
                Click="button_exit_Click">Exit Application</Button>
        <Button x:Name="button_close"
                Grid.Column="3"
                Grid.Row="1"
                VerticalAlignment="Bottom"
                Margin="10,0,10,10"
                Click="Button_close_Click">Close</Button>
    </Grid>
</Window>
